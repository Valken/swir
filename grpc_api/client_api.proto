// Copyright 2019 SWIR authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "rs.swir.api.client";
option java_outer_classname = "SwirClientApiProto";

package swir;

// The definition of API exposed by Sidecar.
service ClientApi {
    // Publish message to a topic/queue
    rpc Publish (PublishRequest) returns (PublishResponse) {
    }
    // Publish stream of messages to a topic/queue

    rpc PublishBiStream (stream PublishRequest) returns (stream PublishResponse) {
    }
  
    rpc Subscribe (SubscribeRequest) returns (stream SubscribeResponse) {
    }
}

// Publish message structure.
message PublishRequest {
  string correlation_id=1;
  //queue name, will be mapped to a physical queue name
    string topic = 2;
    //Payload is copied directly into appropriate format
  bytes payload = 3;
}

// Response message structure
message PublishResponse {
  string correlation_id=1;
  string status = 2;
}

message SubscribeRequest {
  //correlation id for the whole stream
    string correlation_id=1;
  //queue name, will be mapped to a physical queue name
    string topic = 2;
}

// Response message structure
message SubscribeResponse {
    string correlation_id=1;
  //Payload is copied directly into appropriate format
    bytes payload = 2;
}